#Copyright (C) 2015 Forecast Foundation OU, full GPL notice in LICENSE

MARKETS = self.controller.lookup('markets')
ORDERS = self.controller.lookup('orders')

inset('../macros/externs.sem')
inset('../macros/assertNoValue.sem')

macro ORDER_FIELDS: 9

data controller

def init():
    self.controller = 0x0

def getOrderBook(type: uint256, marketID: address, outcomeID: uint256, offset: uint256, numOrdersToLoad: uint256):
    assertNoValue()
    orders = slice(ORDERS.getOrderIDs(type, marketID, outcomeID, 0, numOrdersToLoad, outitems=numOrdersToLoad), items=offset, items=offset+numOrdersToLoad)
    if(len(orders) == 0):
        return([]: arr)
    orderBook = array(ORDER_FIELDS*numOrdersToLoad)
    numAvailableOrders = 0
    i = 0
    while i < numOrdersToLoad:
        orderInfo = ORDERS.getOrder(orders[i], type, marketID, outcomeID, outitems=ORDER_FIELDS)
        if orderInfo[0] != 0:
            j = 0
            while j < 8:
                orderBook[8*numAvailableOrders + j] = orderInfo[j]
                j += 1
            numAvailableOrders += 1
        i += 1
    return(slice(orderBook, items=0, items=ORDER_FIELDS*numAvailableOrders): arr)

def setController(newController: address):
    if(msg.sender != self.controller):
        ~invalid()
    self.controller = newController
    return(1)

def suicideFunds(to: address):
    if(msg.sender != self.controller):
        ~invalid()
    suicide(to)
