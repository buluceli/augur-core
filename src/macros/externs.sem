extern branchFactoryExtern: [createBranch:[address,address,int256]:int256, getLastBranch:[]:int256]
extern marketFactoryExtern: [createMarket:[address,address,int256,int256,int256,int256,address,address,int256,int256,address,int256]:int256, getLastMarket:[]:int256]
extern registrationTokenFactoryExtern: [createRegistrationToken:[address,address]:int256, getLastRegistrationToken:[]:int256]
extern reportingTokenFactoryExtern: [createReportingToken:[address,address,int256[]]:int256, getLastReportingToken:[]:int256]
extern reportingWindowFactoryExtern: [createReportingWindow:[address,address,int256]:int256, getLastReportingWindow:[]:int256]
extern reputationTokenFactoryExtern: [createReputationToken:[address,address]:int256, getLastReputationToken:[]:int256]
extern shareTokenFactoryExtern: [createShareToken:[address]:int256, getLastShareToken:[]:int256]
extern topicsFactoryExtern: [createTopics:[address]:int256, getLastTopics:[]:int256]
extern delegatorExtern: [setup:[int256,int256]:_]
extern mapExtern: [addMapItem:[int256,int256]:int256, contains:[int256]:int256, count:[]:int256, getValue:[int256]:int256, getValueOrZero:[int256]:int256, remove:[int256]:int256]
extern orderedSetExtern: [assertContains:[int256]:_, assertEmpty:[]:_, assertInvariants:[]:_, assertNotEmpty:[]:_, contains:[int256]:int256, getHead:[]:int256, getNext:[int256]:int256, getPrev:[int256]:int256, insertAfter:[int256,int256]:_, insertBefore:[int256,int256]:_, pop:[]:int256, push:[int256]:_]
extern setExtern: [addSetItem:[int256]:int256, contains:[int256]:int256, count:[]:int256, remove:[int256]:int256]
extern stackExtern: [isEmpty:[]:int256, peek:[]:int256, pop:[]:int256, push:[int256]:_]
extern branchExtern: [fork:[address]:_, getChildBranch:[int256]:int256, getCurrentReportingWindow:[]:int256, getForkEndTime:[]:int256, getForkingMarket:[]:int256, getNextReportingWindow:[]:int256, getParentBranch:[]:int256, getParentPayoutDistributionHash:[]:int256, getReportingPeriodDurationInSeconds:[]:int256, getReportingWindowByMarketEndTime:[int256,int256]:int256, getReportingWindowByTimestamp:[int256]:int256, getReportingWindowId:[int256]:int256, getReputationToken:[]:int256, getTopics:[]:int256, initialize:[address,int256]:_, isContainerForMarket:[address]:int256, isContainerForRegistrationToken:[address]:int256, isContainerForReportingToken:[address]:int256, isContainerForReportingWindow:[address]:int256, isParentOf:[address]:int256]
extern marketExtern: [approveSpenders:[]:_, automatedReport:[int256[]]:_, canBeReportedOn:[]:int256, changeCreator:[address]:_, derivePayoutDistributionHash:[int256[]]:int256, disputeAllReporters:[]:_, disputeAutomatedReport:[]:_, disputeLimitedReporters:[]:_, getAutomatedReportDisputeDueTimestamp:[]:int256, getAutomatedReportDueTimestamp:[]:int256, getBranch:[]:int256, getCompleteSetCostInAttotokens:[]:int256, getCreator:[]:int256, getDenominationToken:[]:int256, getDesiredDisputeRewardPot:[]:int256, getEndTime:[]:int256, getFinalPayoutDistributionHash:[]:int256, getFinalWinningReportingToken:[]:int256, getMarketCreatorSettlementFeeInAttoethPerEth:[]:int256, getMaxDisplayPrice:[]:int256, getMinDisplayPrice:[]:int256, getNumberOfOutcomes:[]:int256, getPayoutDenominator:[]:int256, getRegistrationToken:[]:int256, getReportingToken:[int256[]]:int256, getReportingTokenOrZeroByPayoutDistributionHash:[int256]:int256, getReportingWindow:[]:int256, getReputationToken:[]:int256, getShareToken:[int256]:int256, getTentativeWinningPayoutDistributionHash:[]:int256, getTopic:[]:int256, initialize:[address,int256,int256,int256,int256,address,address,int256,int256,address,int256]:int256, isContainerForReportingToken:[address]:int256, isDoneWithAllReporters:[]:int256, isDoneWithAutomatedReporters:[]:int256, isDoneWithLimitedReporters:[]:int256, isFinalized:[]:int256, isInAllDisputePhase:[]:int256, isInAllReportingPhase:[]:int256, isInAutomatedDisputePhase:[]:int256, isInAutomatedReportingPhase:[]:int256, isInLimitedDisutePhase:[]:int256, isInLimitedReportingPhase:[]:int256, migrateThroughAllForks:[]:_, migrateThroughOneFork:[]:int256, needsMigration:[]:int256, privateRewardBondHolders:[]:_, tryFinalize:[]:int256, tryFinalizeAllReporting:[]:int256, tryFinalizeAutomatedReport:[]:int256, tryFinalizeFork:[]:int256, tryFinalizeLimitedReporting:[]:int256, updateTentativeWinningPayoutDistributionHash:[int256]:_, validatePayoutNumerators:[int256[]]:_]
extern registrationTokenExtern: [allowance:[address,address]:int256, approve:[address,int256]:int256, balanceOf:[address]:int256, getBranch:[]:int256, getPeakSupply:[]:int256, getReportingWindow:[]:int256, getReputationToken:[]:int256, initialize:[address]:_, redeem:[]:_, register:[]:_, totalSupply:[]:int256, transfer:[address,int256]:int256, transferFrom:[address,address,int256]:int256]
extern repEscapeHatchExtern: [test:[]:int256]
extern reportingTokenExtern: [allowance:[address,address]:int256, approve:[address,int256]:int256, balanceOf:[address]:int256, buy:[int256]:_, extractBondHolderPayments:[]:_, getBranch:[]:int256, getMarket:[]:int256, getPayoutDistributionHash:[]:int256, getRegistrationToken:[]:int256, getReportingWindow:[]:int256, getReputationToken:[]:int256, initialize:[address,int256[]]:_, migrateLosingTokens:[]:_, redeemDisavowedTokens:[address]:_, redeemForkedToken:[address]:_, redeemWinningTokens:[address]:_, totalSupply:[]:int256, transfer:[address,int256]:int256, transferFrom:[address,address,int256]:int256]
extern reportingWindowExtern: [createNewMarket:[int256,int256,int256,int256,address,address,int256,int256,address,int256]:int256, getBranch:[]:int256, getDisputeEndTime:[]:int256, getDisputeStartTime:[]:int256, getEndTime:[]:int256, getMaxReportsPerLimitedReporterMarket:[]:int256, getRegistrationToken:[]:int256, getReportingEndTime:[]:int256, getReportingStartTime:[]:int256, getReportsByReporter:[address]:int256, getReputationToken:[]:int256, getRequiredReportsPerReporterForlimitedReporterMarkets:[]:int256, getStartTime:[]:int256, getTargetReportsPerLimitedReporterMarket:[]:int256, getTargetReportsPerReporter:[]:int256, initialize:[address,int256]:int256, isActive:[]:int256, isContainerForMarket:[address]:int256, isContainerForRegistrationToken:[address]:int256, isDisputeActive:[]:int256, isDoneReporting:[address]:int256, isReportingActive:[]:int256, migrateMarketInFromNibling:[]:_, migrateMarketInFromSibling:[]:_, noteReport:[address,address,int256]:_, privateAddMarket:[address]:_, privateNoteReport:[address,address]:_, removeMarket:[]:_, updateMarketPhase:[]:_]
extern reputationTokenExtern: [allowance:[address,address]:int256, approve:[address,int256]:int256, assertReputationTokenIsLegit:[address]:_, balanceOf:[address]:int256, getBranch:[]:int256, getTopMigrationDestination:[]:int256, initialize:[address]:_, migrateFromLegacyRepContract:[address]:_, migrateIn:[address,int256]:_, migrateOut:[address,address,int256]:_, safeDeductAllowance:[address,address,int256]:int256, totalSupply:[]:int256, transfer:[address,int256]:int256, transferFrom:[address,address,int256]:int256]
extern binaryOrCategoricalPayoutsExtern: [payoutBinaryOrCategoricalMarket:[address,address,address,uint256]:uint256, payoutIndeterminateBinaryOrCategoricalMarket:[address,address,address,uint256]:uint256, setController:[address]:int256, suicideFunds:[address]:_]
extern cancelOrderExtern: [cancelOrder:[address,address,int256,address,int256]:int256, initialize:[address]:_, publicCancelOrder:[address,int256,address,int256]:int256, refundOrder:[address,int256,int256,int256,address,int256]:int256, setController:[address]:int256, suicideFunds:[address]:_]
extern cashExtern: [allowance:[address,address]:int256, approve:[address,int256]:int256, balanceOf:[address]:int256, depositEther:[address]:int256, getDecimals:[]:int256, getInitiated:[]:int256, getName:[]:int256, getSymbol:[]:int256, initialize:[address]:_, publicDepositEther:[]:int256, publicWithdrawEther:[address,int256]:int256, setController:[address]:int256, suicideFunds:[address]:_, totalSupply:[]:int256, transfer:[address,int256]:int256, transferFrom:[address,address,int256]:int256, withdrawEther:[address,address,int256]:int256]
extern claimProceedsExtern: [claimProceeds:[address,address]:uint256, publicClaimProceeds:[address]:uint256, setController:[address]:int256, suicideFunds:[address]:_]
extern completeSetsExtern: [buyCompleteSets:[address,address,int256]:int256, initialize:[address]:_, publicBuyCompleteSets:[address,int256]:int256, publicSellCompleteSets:[address,int256]:int256, sellCompleteSets:[address,address,int256]:int256, setController:[address]:int256, suicideFunds:[address]:_]
extern makeOrderExtern: [initialize:[address]:_, makeOrder:[address,int256,int256,int256,address,int256,address,address,int256]:int256, placeAsk:[address,int256,int256,address,int256]:int256[], placeBid:[address,int256,int256,address,int256]:int256[], publicMakeOrder:[int256,int256,int256,address,uint256,address,address,int256]:int256, setController:[address]:int256, suicideFunds:[address]:_]
extern ordersExtern: [ascendOrderList:[int256,address,int256,int256,address]:int256[], assertIsNotBetterPrice:[int256,address,int256,int256,address]:int256, assertIsNotWorsePrice:[int256,address,int256,int256,address]:int256, cancelOrderLog:[int256,int256,int256,int256,int256,int256,int256,int256,int256]:uint256, completeSetsLog:[int256,int256,int256,int256,int256,int256,int256]:int256, descendOrderList:[int256,address,int256,int256,address]:int256[], fillOrder:[address,int256,address,int256,int256,int256,int256]:int256, findBoundingOrders:[int256,address,int256,int256,address,address,address,address]:int256[], getAmount:[address,int256,address,int256]:int256, getBestOrderID:[int256,address,int256]:address, getBetterOrderID:[address,int256,address,int256]:address, getGasPrice:[address,int256,address,int256]:int256, getLastOutcomePrice:[address,int256]:int256, getOrder:[address,int256,address,int256]:int256[], getOrderIDs:[int256,address,int256,address,int256]:int256[], getOrderOwner:[address,int256,address,int256]:address, getPrice:[address,int256,address,int256]:int256, getVolume:[address]:int256, getWorseOrderID:[address,int256,address,int256]:address, getWorstOrderID:[int256,address,int256]:address, initialize:[address]:_, insertOrderIntoList:[address,int256,address,int256,int256,address,address]:int256, isBetterPrice:[int256,address,int256,int256,address]:int256, isWorsePrice:[int256,address,int256,int256,address]:int256, modifyMarketVolume:[address,int256]:int256, removeOrder:[address,int256,address,int256]:int256, removeOrderFromList:[address,int256,address,int256]:int256, saveOrder:[address,int256,address,int256,int256,address,int256,int256,int256,address,address,int256,int256]:int256, setController:[address]:int256, setPrice:[address,int256,int256]:uint256, suicideFunds:[address]:_, takeAskOrderLog:[address,address,address,int256,int256,address,int256,int256,int256,int256]:int256, takeBidOrderLog:[address,address,address,int256,int256,address,int256,int256,int256,int256,int256]:int256, updateBestAskOrder:[address,address,int256,int256,int256]:address, updateBestBidOrder:[address,address,int256,int256,int256]:address, updateWorstAskOrder:[address,address,int256,int256,int256]:address, updateWorstBidOrder:[address,address,int256,int256,int256]:address]
extern scalarPayoutsExtern: [payoutScalarMarket:[address,address,address]:uint256, setController:[address]:int256, suicideFunds:[address]:_]
extern shareTokenExtern: [allowance:[address,address]:int256, approve:[address,int256]:int256, balanceOf:[address]:int256, createShares:[address,int256]:int256, destroyShares:[address,int256]:int256, getDecimals:[]:int256, getName:[]:int256, getSymbol:[]:int256, isShareToken:[]:int256, setController:[address]:int256, suicideFunds:[address]:_, totalSupply:[]:int256, transfer:[address,int256]:int256, transferFrom:[address,address,int256]:int256]
extern takeAskOrderExtern: [initialize:[address]:_, setController:[address]:int256, suicideFunds:[address]:_, takeAskOrder:[address,address,address,int256,int256]:int256]
extern takeBidOrderExtern: [initialize:[address]:_, setController:[address]:int256, suicideFunds:[address]:_, takeBidOrder:[address,address,address,int256,int256]:int256]
extern takeOrderExtern: [initialize:[address]:_, publicTakeOrder:[address,int256,address,int256,int256]:int256, setController:[address]:int256, suicideFunds:[address]:_, takeOrder:[address,address,int256,address,int256,int256]:int256]
extern topicsExtern: [getChunkOfTopics:[int256,int256]:int256[], getNumTopics:[]:int256, getTopicPopularity:[int256]:int256, getTopicsInfo:[int256,int256]:int256[], setController:[address]:int256, suicideFunds:[address]:_, updateTopicPopularity:[int256,int256]:int256]
extern tradeExtern: [buy:[address,address,uint256,uint256,int256,int256]:uint256, publicBuy:[address,uint256,uint256,int256,int256]:uint256, publicSell:[address,uint256,uint256,int256,int256]:uint256, publicTakeBestOrder:[uint256,address,uint256,uint256,int256]:uint256, sell:[address,address,uint256,uint256,int256,int256]:uint256, setController:[address]:int256, suicideFunds:[address]:_, takeBestOrder:[address,uint256,address,uint256,uint256,int256]:uint256, trade:[address,uint256,address,uint256,uint256,int256,int256]:uint256]
extern tradingEscapeHatchExtern: [claimSharesInUpdate:[int256]:int256]
extern walletExtern: [initialize:[int256]:int256, setController:[address]:int256, suicideFunds:[address]:_, transfer:[address,int256]:int256]
extern marketCreationExtern: [createCategoricalMarket:[address,int256,int256,int256,address,address,int256]:int256, createScalarMarket:[address,int256,int256,address,int256,int256,address,int256]:int256]
extern marketFeeCalculatorExtern: [getOutstandingSharesInAttoeth:[int256]:int256, getRepMarketCapInAttoeth:[int256]:int256, getReportingFeeInAttoethPerEth:[int256]:int256, getTargetRepMarketCapInAttoeth:[int256]:int256, getTargetReporterGasCosts:[]:int256, getValidityBond:[int256]:int256]
extern orderBookExtern: [getOrderBook:[uint256,address,uint256,uint256,uint256]:int256[], setController:[address]:int256, suicideFunds:[address]:_]
extern registerExtern: [register:[]:int256, setController:[address]:int256, suicideFunds:[address]:_]
extern reputationFaucetExtern: [reputationFaucet:[int256]:int256, setController:[address]:int256, suicideFunds:[address]:_]
extern controllerExtern: [addToWhitelist:[int256]:int256, assertIsWhitelisted:[int256]:int256, assertOnlySpecifiedCaller:[int256,int256]:int256, emergencyStop:[]:int256, getOwner:[]:int256, lookup:[int256]:int256, onlyInEmergency:[]:_, release:[]:int256, removeFromWhitelist:[int256]:int256, setValue:[int256,int256]:int256, stopInEmergency:[]:_, suicide:[int256,int256]:int256, switchModeSoOnlyEmergencyStopsAndEscapeHatchesCanBeUsed:[]:int256, transferOwnership:[int256]:int256, updateController:[int256,int256]:int256]
extern mutexExtern: [acquire:[]:int256, initialize:[address]:_, release:[]:int256, setController:[address]:int256, suicideFunds:[address]:_]
